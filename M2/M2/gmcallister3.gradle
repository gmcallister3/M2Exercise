//Incremental tasks / continuous builds
//Project report plugin - for multi project builds (e.g. API, webapp)
//Project configurations

//Use gradle wrapper?
//gradle.properties


apply plugin: 'java'
apply plugin: 'checkstyle'

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

defaultTasks 'jar'

sourceCompatibility = 1.8
version = '1.0'

task compileTest(dependsOn: compileTestJava) << {
    description = 'Compiles the unit tests for the project'
    println 'Compiling unit tests'
}

test << {
    description = 'Runs all units tests after compilation'
    println 'Running tests'
}

compileJava << {
    description = 'Compiles and builds the project'
    println "Using build file '$buildFile.name' in '$buildFile.parentFile.name' to compile Java."
}

javadoc << {
    description = 'Creates the html documentation for the project'
    println 'Creating JavaDocs'
}

clean << {
    description = 'Removes all the files created by this project'
    println 'Cleaning build directory'
}

jar.doFirst {
    description = 'Creates the executable jar file for this project'
    manifest {
        attributes('Implementation-Title': 'M2 Gradle Exercise',
                    'Implementation-Version': version,
                    'Main-Class': 'edu.gatech.oad.antlab.pkg1.AntLabMain',
                    'Class-Path': configurations.compile.files.join(" ")
                    )
    }
    println 'Creating jar'
}

//Need to include checkstyle configurations in order to work
check << {
    description = 'Runs the checkstyle jar on source files to maintain coding standards'
    println 'Running checkstyle'
}
